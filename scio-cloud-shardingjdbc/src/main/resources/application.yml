logging:
  file: ${spring.application.name}.log
  level:
     root: INFO
     com:
        scio: DEBUG
server:
   port: 7992
eureka:
  instance:
    hostname: localhost
  client:
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:8001/eureka/
spring:
   application:
      name: scio-cloud-shardingjdbc
   profiles:
      active: dev
   jpa:
      database-platform: com.scio.cloud.shardingjdbc.config.MySQL5PlusDialect
      generate-ddl: false
      hibernate:
        ddl-auto: none
        use-new-id-generator-mappings: false
      show-sql: true
      properties:
         hibernate:
           format_sql: false
           dialect: com.scio.cloud.shardingjdbc.config.MySQL5PlusDialect

## sharding jdbc properties for java config 
spring.ds.m0.url: jdbc:mysql://localhost:3306/ds0?serverTimezone=GMT%2B8&euseUnicdoe=true&characterEncoding=utf-8&useSSL=true
spring.ds.m0.username: root
spring.ds.m0.password: root

spring.ds.m1.url: jdbc:mysql://localhost:3306/ds1?serverTimezone=GMT%2B8&euseUnicdoe=true&characterEncoding=utf-8&useSSL=true
spring.ds.m1.username: root
spring.ds.m1.password: root


##sharding-jdbc
# https://shardingsphere.apache.org/document/current/cn/manual/sharding-jdbc/configuration/config-spring-boot/
spring.shardingsphere.enable: true
spring.shardingsphere.props.sql.show: true
spring.shardingsphere.datasource.names: ds0,ds1


#spring.shardingsphere.sharding.datasource.ds0.type=org.apache.commons.dbcp2.BasicDataSource
spring.shardingsphere.datasource.ds0.type: com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.driver-class-name: com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.url: jdbc:mysql://localhost:3306/ds0?serverTimezone=GMT%2B8&euseUnicdoe=true&characterEncoding=utf-8&useSSL=false
spring.shardingsphere.datasource.ds0.jdbc-url: jdbc:mysql://localhost:3306/ds0?serverTimezone=GMT%2B8&euseUnicdoe=true&characterEncoding=utf-8&useSSL=false
spring.shardingsphere.datasource.ds0.username: root
spring.shardingsphere.datasource.ds0.password: root

spring.shardingsphere.datasource.ds1.type: com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.driver-class-name: com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.url: jdbc:mysql://localhost:3306/ds1?serverTimezone=GMT%2B8&euseUnicdoe=true&characterEncoding=utf-8&useSSL=false
spring.shardingsphere.datasource.ds1.jdbc-url: jdbc:mysql://localhost:3306/ds1?serverTimezone=GMT%2B8&euseUnicdoe=true&characterEncoding=utf-8&useSSL=false
spring.shardingsphere.datasource.ds1.username: root
spring.shardingsphere.datasource.ds1.password: root

#default datasouce for none sharding tables like global config,properties
spring.shardingsphere.sharding.default-data-source-name: ds0

#default database sharding rule: mod with user_id
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column: user_id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression: ds$->{new BigInteger(user_id) % 2}

#database sharding rule for table[user_info] mod with user_info.id 
spring.shardingsphere.sharding.tables.user_info.database-strategy.inline.sharding-column: id
spring.shardingsphere.sharding.tables.user_info.database-strategy.inline.algorithm-expression: ds$->{new BigInteger(id) % 2}

#database sharding nodes for table[order],database rule will use default-database-strategy above
spring.shardingsphere.sharding.tables.order.actual-data-nodes: ds$->{0..1}.order$->{0..1}
#table sharding rule for table[order] mode with order.order_id
spring.shardingsphere.sharding.tables.order.table-strategy.inline.sharding-column: order_id
spring.shardingsphere.sharding.tables.order.table-strategy.inline.algorithm-expression: order$->{order_id % 2}
#spring.shardingsphere.sharding.tables.order.key-generator-column-name=order_id
spring.shardingsphere.sharding.binding-tables: order

spring.shardingsphere.sharding.broadcast-tables: user


#spring.shardingsphere.sharding.tables.t-order-item.actual-data-nodes=ds$->{0..1}.t_order_item$->{0..1}
#spring.shardingsphere.sharding.tables.t-order-item.table-strategy.inline.sharding-column=order_id
#spring.shardingsphere.sharding.tables.t-order-item.table-strategy.inline.algorithm-expression=t_order_item$->{order_id % 2}
